{
	"name": "writetosql",
	"properties": {
		"activities": [
			{
				"name": "Get Metadata1",
				"type": "GetMetadata",
				"dependsOn": [],
				"policy": {
					"timeout": "7.00:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"dataset": {
						"referenceName": "ListFolders",
						"type": "DatasetReference"
					},
					"fieldList": [
						"childItems"
					],
					"storeSettings": {
						"type": "AzureBlobFSReadSettings",
						"recursive": true
					}
				}
			},
			{
				"name": "ForEach1",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Get Metadata1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Get Metadata1').output.childItems",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "LookupModeljson",
							"type": "Lookup",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "JsonSource",
									"storeSettings": {
										"type": "AzureBlobFSReadSettings",
										"recursive": false,
										"enablePartitionDiscovery": false
									}
								},
								"dataset": {
									"referenceName": "getModelJSON",
									"type": "DatasetReference"
								}
							}
						},
						{
							"name": "ParseModeljson",
							"type": "WebActivity",
							"dependsOn": [
								{
									"activity": "LookupModeljson",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"url": "https://blog-modeljson2sql-fun.azurewebsites.net/api/HttpTrigger?code=Tm/mdDMO3LHr291krJCSg7z4CnsIOEnpxNLjaxxJ7BdfwTL8VbVVsQ==",
								"method": "POST",
								"body": {
									"value": "@activity('LookupModeljson').output",
									"type": "Expression"
								}
							}
						},
						{
							"name": "FindTable",
							"type": "Lookup",
							"dependsOn": [
								{
									"activity": "ParseModeljson",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "@concat('SELECT DISTINCT 1 FROM INFORMATION_SCHEMA.columns WHERE table_name = ''' ,activity('ParseModeljson').output.results[0].name, '''')",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00"
								},
								"dataset": {
									"referenceName": "InsertcvstoSQLDB",
									"type": "DatasetReference",
									"parameters": {
										"TableName": "DummyTable",
										"TableSchema": "DummySchema"
									}
								},
								"firstRowOnly": false
							}
						},
						{
							"name": "CheckUpdate Table",
							"description": "If table is not found, create it, else check if columns are missing",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "FindTable",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@equals(activity('FindTable').output.count,1)",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "prepDW",
										"type": "Lookup",
										"dependsOn": [],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "AzureSqlSource",
												"sqlReaderQuery": "IF NOT EXISTS (SELECT * FROM sysobjects WHERE id = object_id(N'[dbo].[ExecuteQuery]') AND OBJECTPROPERTY(id, N'IsProcedure') = 1) BEGIN EXEC ('CREATE PROC [dbo].[ExecuteQuery] @query [nvarchar](max) AS EXEC (@query)'); SELECT 1; END ELSE SELECT 2; IF NOT EXISTS (SELECT * FROM sysobjects WHERE id = object_id(N'[dbo].[ADFCDSACopyTracker]') AND OBJECTPROPERTY(id, N'IsTable') = 1) BEGIN EXEC ('CREATE TABLE  [dbo].[ADFCDSACopyTracker] ( [Id] [int] IDENTITY(1,1) NOT NULL, [EntityName] [nvarchar](200) NULL, [PartionLocation] [nvarchar](500) NULL, [RunId] [nvarchar](200) NULL, [RefreshTime] [nvarchar](200) NULL, [ModifiedTime] [nvarchar](200) NULL)'); SELECT 3; END ELSE SELECT 4;",
												"queryTimeout": "02:00:00"
											},
											"dataset": {
												"referenceName": "InsertcvstoSQLDB",
												"type": "DatasetReference",
												"parameters": {
													"TableName": "DummyTable",
													"TableSchema": "DummySchema"
												}
											}
										}
									},
									{
										"name": "create table_copy1",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [
											{
												"activity": "prepDW",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "7.00:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "dbo.ExecuteQuery",
											"storedProcedureParameters": {
												"query": {
													"value": {
														"value": "@activity('ParseModeljson').output.results[0].query",
														"type": "Expression"
													},
													"type": "String"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "AzureSqlDatabase1",
											"type": "LinkedServiceReference"
										}
									}
								]
							}
						},
						{
							"name": "Copy data SQL",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "CheckUpdate Table",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureBlobFSSource",
									"recursive": true
								},
								"sink": {
									"type": "AzureSqlSink"
								},
								"enableStaging": false
							},
							"inputs": [
								{
									"referenceName": "LoadcsvfromADLSgen2",
									"type": "DatasetReference",
									"parameters": {
										"File": "@item().name",
										"Schema": {
											"value": "@activity('ParseModeljson').output.results[0].tableStructure",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "InsertcvstoSQLDB",
									"type": "DatasetReference",
									"parameters": {
										"TableName": "@activity('ParseModeljson').output.results[0].tableName",
										"TableSchema": "@activity('ParseModeljson').output.results[0].tableStructure"
									}
								}
							]
						}
					]
				}
			}
		],
		"parameters": {
			"year": {
				"type": "string",
				"defaultValue": "2019"
			},
			"month": {
				"type": "string",
				"defaultValue": "12"
			},
			"day": {
				"type": "string",
				"defaultValue": "6"
			}
		},
		"annotations": []
	}
}